name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'default' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ env.TF_WORKSPACE }}/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Prepare Environment Variables
        run: |
          echo "TF_VAR_my_ip=\"${{ secrets.TF_VAR_my_ip_default }}\"" >> env_vars
          echo "TF_VAR_db_name=\"${{ secrets.TF_VAR_db_name_default }}\"" >> env_vars
          echo "TF_VAR_db_username=\"${{ secrets.TF_VAR_db_username_default }}\"" >> env_vars
          echo "TF_VAR_db_password=\"${{ secrets.TF_VAR_db_password_default }}\"" >> env_vars
          echo "TF_VAR_vpc_cidr=\"${{ secrets.TF_VAR_vpc_cidr_default }}\"" >> env_vars
          echo "TF_VAR_subnet_cidrs=[${{ secrets.TF_VAR_subnet_cidrs_default }}]" >> env_vars
          echo "TF_VAR_availability_zones=[${{ secrets.TF_VAR_availability_zones_default }}]" >> env_vars
          echo "TF_VAR_instance_type=\"${{ secrets.TF_VAR_instance_type_default }}\"" >> env_vars
          echo "SSH_PUBLIC_KEY=\"${{ secrets.SSH_PUBLIC_KEY }}\"" >> env_vars

      - name: Load Environment Variables
        run: |
          cat env_vars | while read line; do
            if [[ $line =~ ^[^#]*= ]]; then
              export "$line"
            fi
          done
          rm env_vars

      - name: Debug Environment Variables
        run: |
          echo "MY_IP: $TF_VAR_my_ip"
          echo "DB_PASSWORD: $TF_VAR_db_password"
          echo "SUBNET_CIDRS: $TF_VAR_subnet_cidrs"
          echo "AVAILABILITY_ZONES: $TF_VAR_availability_zones"
          echo "SSH_PUBLIC_KEY: $SSH_PUBLIC_KEY"

      - name: Terraform Plan
        run: terraform plan -var "environment=${{ env.TF_WORKSPACE }}" -var "public_key_source=env" -var "ssh_public_key=$SSH_PUBLIC_KEY" -var "my_ip=$TF_VAR_my_ip" -var "db_name=$TF_VAR_db_name" -var "db_username=$TF_VAR_db_username" -var "db_password=$TF_VAR_db_password" -var "vpc_cidr=$TF_VAR_vpc_cidr" -var "subnet_cidrs=$TF_VAR_subnet_cidrs" -var "availability_zones=$TF_VAR_availability_zones" -var "instance_type=$TF_VAR_instance_type" -out=tfplan
        env:
          SSH_PUBLIC_KEY: $SSH_PUBLIC_KEY
          TF_VAR_db_password: $TF_VAR_db_password

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_my_ip: $TF_VAR_my_ip
          TF_VAR_db_password: $TF_VAR_db_password
          SSH_PUBLIC_KEY: $SSH_PUBLIC_KEY