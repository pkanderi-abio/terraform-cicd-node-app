name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'default' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ env.TF_WORKSPACE }}/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var "environment=${{ env.TF_WORKSPACE }}" -var "public_key_source=env" -var "ssh_public_key=${{ env.SSH_PUBLIC_KEY }}" -out=tfplan
        env:
          SSH_PUBLIC_KEY: ${{ env.SSH_PUBLIC_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_my_ip: ${{ env.TF_VAR_my_ip }}
          TF_VAR_db_password: ${{ env.TF_VAR_db_password }}
          SSH_PUBLIC_KEY: ${{ env.SSH_PUBLIC_KEY }}

      - name: Debug Secrets
        run: |
          echo "MY_IP: $TF_VAR_my_ip"
          echo "SUBNET_CIDRS: $TF_VAR_subnet_cidrs"
          echo "AVAILABILITY_ZONES: $TF_VAR_availability_zones"
          echo "SSH_PUBLIC_KEY: $SSH_PUBLIC_KEY"