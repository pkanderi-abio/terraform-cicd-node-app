name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'default' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ env.TF_WORKSPACE }}/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var "environment=${{ env.TF_WORKSPACE }}" -var "public_key_source=env" -var "my_ip=${{ secrets[format('TF_VAR_my_ip_{0}', env.TF_WORKSPACE)] }}" -var "db_name=${{ secrets[format('TF_VAR_db_name_{0}', env.TF_WORKSPACE)] }}" -var "db_username=${{ secrets[format('TF_VAR_db_username_{0}', env.TF_WORKSPACE)] }}" -var "db_password=${{ secrets[format('TF_VAR_db_password_{0}', env.TF_WORKSPACE)] }}" -var "vpc_cidr=${{ secrets[format('TF_VAR_vpc_cidr_{0}', env.TF_WORKSPACE)] }}" -var "subnet_cidrs=${{ secrets[format('TF_VAR_subnet_cidrs_{0}', env.TF_WORKSPACE)] }}" -var "availability_zones=${{ secrets[format('TF_VAR_availability_zones_{0}', env.TF_WORKSPACE)] }}" -var "instance_type=${{ secrets[format('TF_VAR_instance_type_{0}', env.TF_WORKSPACE)] }}" -out=tfplan
        env:
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_my_ip: ${{ secrets[format('TF_VAR_my_ip_{0}', env.TF_WORKSPACE)] }}
          TF_VAR_db_password: ${{ secrets[format('TF_VAR_db_password_{0}', env.TF_WORKSPACE)] }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}